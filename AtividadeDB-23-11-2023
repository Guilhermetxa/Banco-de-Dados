CREATE DATABASE IF NOT EXISTS REDESOCIAL;
USE REDESOCIAL;

-- 1
CREATE TABLE IF NOT EXISTS USUARIO(
ID INT PRIMARY KEY AUTO_INCREMENT,
NOME_USUARIO VARCHAR(255) NOT NULL,
DATA_NASCIMENTO DATE
);

-- 2
CREATE TABLE IF NOT EXISTS POSTAGENS(
ID INT PRIMARY KEY AUTO_INCREMENT,
TEXTO VARCHAR(255) NOT NULL,
DATA_HORA DATETIME,
USUARIO_ID INT NOT NULL,
CONSTRAINT POSTAGEM_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID)
);

-- 3
CREATE TABLE IF NOT EXISTS COMENTARIOS(
ID INT PRIMARY KEY AUTO_INCREMENT,
TEXTO VARCHAR(255) NOT NULL,
DATA_HORA DATETIME,
USUARIO_ID INT NOT NULL,
POSTAGEM_ID INT NOT NULL,
CONSTRAINT COMENTARIO_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID),
CONSTRAINT POSTAGEM_COMENTARIO FOREIGN KEY (POSTAGEM_ID) REFERENCES POSTAGENS(ID)
);

-- 4
CREATE TABLE IF NOT EXISTS AMIZADES(
ID INT PRIMARY KEY AUTO_INCREMENT,
USUARIO1_ID INT NOT NULL,
USUARIO2_ID INT NOT NULL,
DATA_CONEXAO DATETIME,
CONSTRAINT AMIZADE_USUARIO1 FOREIGN KEY (USUARIO1_ID) REFERENCES USUARIO(ID),
CONSTRAINT AMIZADE_USUARIO2 FOREIGN KEY (USUARIO2_ID) REFERENCES USUARIO(ID)
);

-- 5
CREATE TABLE IF NOT EXISTS CURTIDAS(
ID INT PRIMARY KEY AUTO_INCREMENT,
DATA_CURTIDA DATETIME,
USUARIO_ID INT NOT NULL,
POSTAGEM_ID INT NOT NULL,
CONSTRAINT CURTIDA_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID),
CONSTRAINT CURTIDA_POSTAGEM FOREIGN KEY (POSTAGEM_ID) REFERENCES POSTAGENS(ID)
);

-- 6
CREATE TABLE IF NOT EXISTS GRUPOS(
ID INT PRIMARY KEY AUTO_INCREMENT,
NOME VARCHAR(255),
DESCRICAO VARCHAR(255)
);

-- 7
CREATE TABLE IF NOT EXISTS MEMBROS_DE_GRUPO(
ID INT PRIMARY KEY AUTO_INCREMENT, 
USUARIO_ID INT NOT NULL,
GRUPO_ID INT NOT NULL,
DATA_ADESAO DATE,
CONSTRAINT MEMBRO_USUARIO FOREIGN KEY(USUARIO_ID) REFERENCES USUARIO(ID),
CONSTRAINT MEMBRO_GRUPO FOREIGN KEY(GRUPO_ID) REFERENCES GRUPOS(ID)
);

-- Insert na TABELA USUARIO
INSERT INTO USUARIO (NOME_USUARIO, DATA_NASCIMENTO) VALUES ('joão','2023-11-22');
INSERT INTO USUARIO (NOME_USUARIO, DATA_NASCIMENTO) VALUES ('Kauan','2022-07-16');
INSERT INTO USUARIO (NOME_USUARIO, DATA_NASCIMENTO) VALUES ('Gabriel','2023-05-03');

-- Insert na TABELA POSTAGENS
INSERT INTO POSTAGENS (TEXTO, DATA_HORA, USUARIO_ID) VALUES ('Postagem de João','2023-11-24 11:00:00',1);
INSERT INTO POSTAGENS (TEXTO, DATA_HORA, USUARIO_ID) VALUES ('Postagem de Kauan','2022-10-14 20:00:00',2);
INSERT INTO POSTAGENS (TEXTO, DATA_HORA, USUARIO_ID) VALUES ('Postagem de Gabriel','2021-02-19 15:00:00',3);

-- Insert na TABELA COMENTARIOS
INSERT INTO COMENTARIOS (TEXTO, DATA_HORA, USUARIO_ID, POSTAGEM_ID) VALUES ('Comentário de João','2023-11-24 11:30:00',1,6);
INSERT INTO COMENTARIOS (TEXTO, DATA_HORA, USUARIO_ID, POSTAGEM_ID) VALUES ('Comentário de Kauan','2022-10-14 20:30:00',2,7);
INSERT INTO COMENTARIOS (TEXTO, DATA_HORA, USUARIO_ID, POSTAGEM_ID) VALUES ('Comentário de Gabriel','2021-02-19 15:30:00',3,8);

-- Insert na TABELA AMIZADES
INSERT INTO AMIZADES (USUARIO1_ID, USUARIO2_ID, DATA_CONEXAO) VALUES (1,2,'2023-11-24 12:00:00');
INSERT INTO AMIZADES (USUARIO1_ID, USUARIO2_ID, DATA_CONEXAO) VALUES (1,3,'2022-10-14 21:00:00');
INSERT INTO AMIZADES (USUARIO1_ID, USUARIO2_ID, DATA_CONEXAO) VALUES (2,3,'2021-02-19 16:00:00');

-- Insert na TABELA CURTIDAS
/*CREATE TABLE IF NOT EXISTS CURTIDAS(
ID INT PRIMARY KEY AUTO_INCREMENT,
DATA_CURTIDA DATETIME,
USUARIO_ID INT NOT NULL,
POSTAGEM_ID INT NOT NULL,
CONSTRAINT CURTIDA_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID),
CONSTRAINT CURTIDA_POSTAGEM FOREIGN KEY (POSTAGEM_ID) REFERENCES POSTAGENS(ID)
);*/

SELECT * FROM USUARIO;
SELECT * FROM POSTAGENS;
SELECT * FROM COMENTARIOS;
SELECT * FROM AMIZADES;
SELECT * FROM CURTIDAS;
SELECT * FROM GRUPOS;
SELECT * FROM MEMBROS_DE_GRUPO;

-- Insert na TABELA GRUPOS
/*CREATE TABLE IF NOT EXISTS GRUPOS(
ID INT PRIMARY KEY AUTO_INCREMENT,
NOME VARCHAR(255),
DESCRICAO VARCHAR(255)
);*/

-- Insert na TABELA MEMBROS_DE_GRUPO
/*CREATE TABLE IF NOT EXISTS MEMBROS_DE_GRUPO(
ID INT PRIMARY KEY AUTO_INCREMENT, 
USUARIO_ID INT NOT NULL,
GRUPO_ID INT NOT NULL,
DATA_ADESAO DATE,
CONSTRAINT MEMBRO_USUARIO FOREIGN KEY(USUARIO_ID) REFERENCES USUARIO(ID),
CONSTRAINT MEMBRO_GRUPO FOREIGN KEY(GRUPO_ID) REFERENCES GRUPOS(ID)
);*/
